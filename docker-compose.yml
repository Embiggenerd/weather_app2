version: "2.1"

services:
  # Beginning users segment:
  users-db:
    container_name: users-db
    build: ./services/users/src/db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    healthcheck:
      test: exit 0

  users-data:
    build: ./services/users
    volumes:
      - ./services/users:/users
      - /users/dist
      - /users/node_modules
    healthcheck:
      test: exit 0
    command: npm install

  users-transpiler:
    build: ./services/users/
    volumes_from:
      - users-data
    depends_on:
      - users-data
    command: tsc --watch

  users-service:
    container_name: users-service
    build: ./services/users
    volumes_from:
      - users-data
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgres://admin:admin@users-db:5432/node_docker_api_users_dev
      - DATABASE_TEST_URL=postgres://admin:admin@users-db:5432/node_docker_api_users_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=changeme
    depends_on:
      users-db:
        condition: service_healthy 
    links:
      - users-db
    healthcheck:
      interval: 1m30s
      test: exit 0
    command: nodemon --watch dist
  # End users segment
  
  # Beginning locations segment
  locations-db:
    container_name: locations-db
    build: ./services/locations/src/db
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    healthcheck:
      test: exit 0
  
  locations-data:
    build: ./services/locations
    volumes:
      - ./services/locations:/locations
      - /locations/dist
      - /locations/node_modules
    healthcheck:
      test: exit 0
    command: npm install

  locations-transpiler:
    build: ./services/locations
    volumes_from:
      - locations-data
    depends_on:
      - locations-data
    command: tsc --watch

  locations-service:
    container_name: locations-service
    build: ./services/locations
    volumes_from:
      - locations-data
    ports:
      - "3004:3001"
    environment:
      - DATABASE_URL=postgres://admin:admin@locations-db:5432/node_docker_api_locations_dev
      - DATABASE_TEST_URL=postgres://admin:admin@locations-db:5432/node_docker_api_locations_test
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=changeme
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY}
    depends_on:
      locations-db:
        condition: service_healthy
      users-service:
        condition: service_healthy
    links:
      - locations-db
      - users-service
    command: nodemon --watch dist
  # End locations segment

  # Begin web segment
  web-data:
    build: ./web
    volumes:
      - ./web:/web
      - /web/dist
      - /web/node_modules
    healthcheck:
      test: exit 0
    command: npm install

  web-transpiler:
    build: ./web
    volumes_from:
      - web-data
    depends_on:
      - web-data
    command: tsc --watch

  web:
    build: ./web
    volumes_from:
      - web-data
    ports:
      - "3005:3002"
    environment:
      - NODE_ENV=${NODE_ENV}
      - TOKEN_SECRET=changeme
    depends_on:
      locations-db:
        condition: service_started
      users-service:
        condition: service_started
    links:
      - locations-service
      - users-service
    command: nodemon 
    # End web segment